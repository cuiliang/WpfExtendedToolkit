<!--
    ***********************************************************************************
    
    Toolkit for WPF
    
    Copyright (C) 2007-2018 Xceed Software Inc.
    
    This program is provided to you under the terms of the Microsoft Public
    License (Ms-PL) as published at http://wpftoolkit.codeplex.com/license
    
    For more features, controls, and fast professional support,
    pick up the Plus Edition at https://xceed.com/xceed-toolkit-plus-for-wpf/
    
    Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids
    
    **********************************************************************************
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes"
    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters"
    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\..\Themes\Generic\Glyphs.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <conv:InverseBoolConverter x:Key="InverseBoolConverter" />

    <LinearGradientBrush x:Key="ColorPickerDarkBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFA3AEB9" />
        <GradientStop Offset="0.375" Color="#FF8399A9" />
        <GradientStop Offset="0.375" Color="#FF718597" />
        <GradientStop Offset="1" Color="#FF617584" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--  ===============================================================================  -->
    <!--  SplitButton  -->
    <!--  ===============================================================================  -->
    <conv:ThicknessSideRemovalConverter x:Key="ThicknessSideRemovalConverter" />

    <Style TargetType="{x:Type local:SplitButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonNormalBackgroundKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonNormalOuterBorderKey}}" />
        <Setter Property="DropDownContentBackground" Value="{StaticResource PopupBackgroundBrush}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SplitButton}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <chrome:ButtonChrome
                            x:Name="ControlChrome"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="2.75"
                            RenderEnabled="{TemplateBinding IsEnabled}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button
                                    x:Name="PART_ActionButton"
                                    Margin="0"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Style="{x:Null}">
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </Button.Template>
                                    <Grid>
                                        <chrome:ButtonChrome
                                            x:Name="ActionButtonChrome"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSideRemovalConverter}, ConverterParameter=2}"
                                            CornerRadius="2.75, 0, 0, 2.75"
                                            Foreground="{TemplateBinding Foreground}"
                                            RenderEnabled="{TemplateBinding IsEnabled}"
                                            RenderMouseOver="{Binding IsMouseOver, ElementName=PART_ActionButton}"
                                            RenderPressed="{Binding IsPressed, ElementName=PART_ActionButton}">
                                            <ContentPresenter
                                                Name="ActionButtonContent"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                RecognizesAccessKey="true" />
                                        </chrome:ButtonChrome>
                                    </Grid>
                                </Button>
                                <ToggleButton
                                    x:Name="PART_ToggleButton"
                                    Grid.Column="1"
                                    IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                    <Grid>
                                        <chrome:ButtonChrome
                                            x:Name="ToggleButtonChrome"
                                            Padding="1,0,1,0"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="0, 2.75, 2.75, 0"
                                            RenderChecked="{TemplateBinding IsOpen}"
                                            RenderEnabled="{TemplateBinding IsEnabled}"
                                            RenderMouseOver="{Binding IsMouseOver, ElementName=PART_ToggleButton}"
                                            RenderPressed="{Binding IsPressed, ElementName=PART_ToggleButton}">
                                            <Grid
                                                x:Name="arrowGlyph"
                                                Margin="4,3,4,3"
                                                IsHitTestVisible="False">
                                                <Path
                                                    x:Name="Arrow"
                                                    Width="9"
                                                    Height="5"
                                                    Margin="0,1,0,0"
                                                    Data="{StaticResource DownArrowGeometry}"
                                                    Fill="#FF000000" />
                                            </Grid>
                                        </chrome:ButtonChrome>
                                    </Grid>
                                </ToggleButton>
                            </Grid>
                        </chrome:ButtonChrome>

                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="1"
                            IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}"
                            Placement="{TemplateBinding DropDownPosition}"
                            StaysOpen="False"
                            VerticalOffset="1">
                            <!--  TODO: Create Popup Styles that can be reused on all popups in the toolkit  -->
                            <Border
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Background="{TemplateBinding DropDownContentBackground}"
                                BorderBrush="{StaticResource ColorPickerDarkBorderBrush}"
                                BorderThickness="1">
                                <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Auto">
                                    <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}" />
                                </ScrollViewer>
                            </Border>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
