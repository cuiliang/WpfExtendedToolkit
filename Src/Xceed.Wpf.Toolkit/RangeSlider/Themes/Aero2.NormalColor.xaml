<!--
    ***********************************************************************************
    
    Toolkit for WPF
    
    Copyright (C) 2007-2018 Xceed Software Inc.
    
    This program is provided to you under the terms of the Microsoft Public
    License (Ms-PL) as published at http://wpftoolkit.codeplex.com/license
    
    For more features, controls, and fast professional support,
    pick up the Plus Edition at https://xceed.com/xceed-toolkit-plus-for-wpf/
    
    Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids
    
    **********************************************************************************
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Converters"
    xmlns:coreConv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters"
    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes">

    <coreConv:SolidColorBrushToColorConverter x:Key="SolidColorBrushToColorConverter" />

    <!--  Repeat Button - This is used by the RangeSlider for the LowerRange, Range, and HigherRange buttons  -->
    <Style x:Key="DefaultRangeStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle x:Name="MainBorder" Fill="{TemplateBinding Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        Since a thumb is pretty small, we put a bigger visual clue
        outside the thumb bounds to give the user a hint where the focus is
    -->
    <Style x:Key="ThumbFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="-2"
                        Stroke="Black"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  **********************  -->
    <!--  Thumb Template  -->
    <!--  **********************  -->
    <ControlTemplate x:Key="ThumbTemplate" TargetType="{x:Type Thumb}">
        <Grid>
            <Rectangle
                x:Name="BackgroundFadingRect"
                Width="11"
                Height="20"
                Fill="Black"
                SnapsToDevicePixels="True" />
            <Rectangle
                x:Name="MainBorder"
                Width="11"
                Height="20"
                Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, TargetNullValue=#FFF0F0F0}"
                Opacity="1"
                SnapsToDevicePixels="True"
                Stroke="#FFACACAC"
                StrokeThickness="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={StaticResource SolidColorBrushToColorConverter}}" Value="Transparent">
                <Setter TargetName="BackgroundFadingRect" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MainBorder" Property="Opacity" Value="0.75" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" Value="{x:Null}" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="MainBorder" Property="Opacity" Value="1" />
                <Setter TargetName="MainBorder" Property="Stroke" Value="#FF7EB4EA" />
                <Setter TargetName="MainBorder" Property="Fill" Value="#FFDCECFC" />
            </MultiDataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="MainBorder" Property="Opacity" Value="1" />
                <Setter TargetName="MainBorder" Property="Stroke" Value="#FFD9D9D9" />
                <Setter TargetName="MainBorder" Property="Fill" Value="#FFF0F0F0" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Slider}}, Path=Orientation}" Value="Vertical">
                <Setter TargetName="MainBorder" Property="Width" Value="20" />
                <Setter TargetName="MainBorder" Property="Height" Value="11" />
                <Setter TargetName="BackgroundFadingRect" Property="Width" Value="20" />
                <Setter TargetName="BackgroundFadingRect" Property="Height" Value="11" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  **********************  -->
    <!--  Slider Template  -->
    <!--  **********************  -->
    <ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type Slider}">
        <Border
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Track x:Name="PART_Track" Orientation="{TemplateBinding Orientation}">
                <Track.Thumb>
                    <Thumb
                        x:Name="Thumb"
                        Background="{TemplateBinding Background}"
                        FocusVisualStyle="{StaticResource ThumbFocusVisualStyle}"
                        Focusable="True"
                        Template="{StaticResource ThumbTemplate}" />
                </Track.Thumb>
            </Track>
        </Border>
    </ControlTemplate>

    <!--  **********************  -->
    <!--  HorizontalTickSlider Template  -->
    <!--  **********************  -->
    <ControlTemplate x:Key="HorizontalTickSliderTemplate" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TickBar
                Name="TopTick"
                Grid.Row="0"
                Height="4"
                Fill="Black"
                Placement="Top"
                SnapsToDevicePixels="True"
                Visibility="Collapsed" />

            <Border
                Grid.Row="1"
                SnapsToDevicePixels="true"
                Visibility="Hidden">
                <Track x:Name="PART_Track" Orientation="{TemplateBinding Orientation}">
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Focusable="True"
                            Template="{StaticResource ThumbTemplate}" />
                    </Track.Thumb>
                </Track>
            </Border>

            <TickBar
                Name="BottomTick"
                Grid.Row="2"
                Height="4"
                Fill="Black"
                Placement="Bottom"
                SnapsToDevicePixels="True"
                Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  **********************  -->
    <!--  VerticalTickSlider Template  -->
    <!--  **********************  -->
    <ControlTemplate x:Key="VerticalTickSliderTemplate" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TickBar
                Name="LeftTick"
                Grid.Column="0"
                Width="4"
                Fill="Black"
                Placement="Left"
                SnapsToDevicePixels="True"
                Visibility="Collapsed" />

            <Border
                Grid.Column="1"
                SnapsToDevicePixels="true"
                Visibility="Hidden">
                <Track x:Name="PART_Track" Orientation="{TemplateBinding Orientation}">
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Focusable="True"
                            Template="{StaticResource ThumbTemplate}" />
                    </Track.Thumb>
                </Track>
            </Border>

            <TickBar
                Name="RightTick"
                Grid.Column="2"
                Width="4"
                Fill="Black"
                Placement="Right"
                SnapsToDevicePixels="True"
                Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}" Value="TopLeft">
                <Setter TargetName="LeftTick" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}" Value="BottomRight">
                <Setter TargetName="RightTick" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}" Value="Both">
                <Setter TargetName="LeftTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="RightTick" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  **********************  -->
    <!--  Vertical RangeSlider Template  -->
    <!--  **********************  -->
    <ControlTemplate x:Key="VerticalRangeSlider" TargetType="{x:Type local:RangeSlider}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="LeftColumn" Width="0" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition x:Name="RightColumn" Width="0" />
                </Grid.ColumnDefinitions>
                <!--  Get the Thumbs's height to set a good height for the RangeSlider.  -->
                <Grid.RowDefinitions>
                    <RowDefinition Height="11" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="11" />
                </Grid.RowDefinitions>

                <Border
                    Grid.Row="1"
                    Grid.RowSpan="3"
                    Grid.Column="1"
                    Width="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Stretch"
                    Background="#FFE7EAEA"
                    BorderBrush="#FFD6D6D6"
                    BorderThickness="1" />

                <!--  Create a Hidden Slider to only display its Ticks  -->
                <Slider
                    x:Name="TickSlider"
                    Grid.RowSpan="5"
                    Grid.ColumnSpan="3"
                    Margin="0,5.5,0,5.5"
                    Focusable="False"
                    Maximum="{Binding Maximum, ElementName=PART_HigherSlider}"
                    Minimum="{Binding Minimum, ElementName=PART_LowerSlider}"
                    Orientation="Vertical"
                    Template="{StaticResource VerticalTickSliderTemplate}"
                    TickFrequency="{TemplateBinding TickFrequency}" />

                <RepeatButton
                    x:Name="PART_LowerRange"
                    Grid.Row="3"
                    Grid.Column="1"
                    Height="{TemplateBinding LowerRangeWidth}"
                    Background="{TemplateBinding LowerRangeBackground}"
                    SnapsToDevicePixels="True"
                    Style="{Binding LowerRangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}" />

                <RepeatButton
                    Grid.Row="2"
                    Grid.Column="1"
                    Height="{TemplateBinding RangeWidth}"
                    Background="{TemplateBinding RangeBackground}"
                    SnapsToDevicePixels="True"
                    Style="{Binding RangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}" />

                <RepeatButton
                    x:Name="PART_HigherRange"
                    Grid.Row="1"
                    Grid.Column="1"
                    Height="{TemplateBinding HigherRangeWidth}"
                    Background="{TemplateBinding HigherRangeBackground}"
                    SnapsToDevicePixels="True"
                    Style="{Binding HigherRangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}" />

                <!--  Margin is set in CodeBehind, based on HigherSlider's Thumb Height  -->
                <Slider
                    x:Name="PART_LowerSlider"
                    Grid.RowSpan="5"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    AutoToolTipPlacement="{TemplateBinding AutoToolTipPlacement}"
                    AutoToolTipPrecision="{TemplateBinding AutoToolTipPrecision}"
                    Background="{TemplateBinding LowerThumbBackground}"
                    Focusable="False"
                    IsSnapToTickEnabled="{TemplateBinding IsSnapToTickEnabled}"
                    Orientation="Vertical"
                    Template="{StaticResource SliderTemplate}"
                    TickFrequency="{TemplateBinding TickFrequency}" />

                <!--  Margin is set in CodeBehind, based on LowerSlider's Thumb width  -->
                <Slider
                    x:Name="PART_HigherSlider"
                    Grid.RowSpan="5"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    AutoToolTipPlacement="{TemplateBinding AutoToolTipPlacement}"
                    AutoToolTipPrecision="{TemplateBinding AutoToolTipPrecision}"
                    Background="{TemplateBinding HigherThumbBackground}"
                    Focusable="False"
                    IsSnapToTickEnabled="{TemplateBinding IsSnapToTickEnabled}"
                    Orientation="Vertical"
                    Template="{StaticResource SliderTemplate}"
                    TickFrequency="{TemplateBinding TickFrequency}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="LeftColumn" Property="Width" Value="4" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="RightColumn" Property="Width" Value="4" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="LeftColumn" Property="Width" Value="4" />
                <Setter TargetName="RightColumn" Property="Width" Value="4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  **********************  -->
    <!--  RangeSlider Style  -->
    <!--  **********************  -->
    <Style TargetType="{x:Type local:RangeSlider}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:RangeSlider}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="TopRow" Height="0" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="BottomRow" Height="0" />
                            </Grid.RowDefinitions>
                            <!--  Get the Thumbs's width to set a good width for the RangeSlider.  -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="11" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="11" />
                            </Grid.ColumnDefinitions>

                            <Border
                                Grid.Row="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                Height="4"
                                VerticalAlignment="Center"
                                Background="#FFE7EAEA"
                                BorderBrush="#FFD6D6D6"
                                BorderThickness="1" />

                            <!--  Create a Hidden Slider to only display its Ticks  -->
                            <Slider
                                x:Name="TickSlider"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="5"
                                Margin="5.5,0,5.5,0"
                                Focusable="False"
                                Maximum="{Binding Maximum, ElementName=PART_HigherSlider}"
                                Minimum="{Binding Minimum, ElementName=PART_LowerSlider}"
                                Template="{StaticResource HorizontalTickSliderTemplate}"
                                TickFrequency="{TemplateBinding TickFrequency}" />

                            <RepeatButton
                                x:Name="PART_LowerRange"
                                Grid.Row="1"
                                Grid.Column="1"
                                Width="{TemplateBinding LowerRangeWidth}"
                                Background="{TemplateBinding LowerRangeBackground}"
                                SnapsToDevicePixels="True"
                                Style="{Binding LowerRangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}" />

                            <RepeatButton
                                Grid.Row="1"
                                Grid.Column="2"
                                Width="{TemplateBinding RangeWidth}"
                                Background="{TemplateBinding RangeBackground}"
                                SnapsToDevicePixels="True"
                                Style="{Binding RangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}" />

                            <RepeatButton
                                x:Name="PART_HigherRange"
                                Grid.Row="1"
                                Grid.Column="3"
                                Width="{TemplateBinding HigherRangeWidth}"
                                Background="{TemplateBinding HigherRangeBackground}"
                                SnapsToDevicePixels="True"
                                Style="{Binding HigherRangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}" />

                            <!--  Margin is set in CodeBehind, based on HigherSlider's Thumb width  -->
                            <Slider
                                x:Name="PART_LowerSlider"
                                Grid.Row="1"
                                Grid.ColumnSpan="5"
                                AutoToolTipPlacement="{TemplateBinding AutoToolTipPlacement}"
                                AutoToolTipPrecision="{TemplateBinding AutoToolTipPrecision}"
                                Background="{TemplateBinding LowerThumbBackground}"
                                Focusable="False"
                                IsSnapToTickEnabled="{TemplateBinding IsSnapToTickEnabled}"
                                Template="{StaticResource SliderTemplate}"
                                TickFrequency="{TemplateBinding TickFrequency}" />

                            <!--  Margin is set in CodeBehind, based on LowerSlider's Thumb width  -->
                            <Slider
                                x:Name="PART_HigherSlider"
                                Grid.Row="1"
                                Grid.ColumnSpan="5"
                                AutoToolTipPlacement="{TemplateBinding AutoToolTipPlacement}"
                                AutoToolTipPrecision="{TemplateBinding AutoToolTipPrecision}"
                                Background="{TemplateBinding HigherThumbBackground}"
                                Focusable="False"
                                IsSnapToTickEnabled="{TemplateBinding IsSnapToTickEnabled}"
                                Template="{StaticResource SliderTemplate}"
                                TickFrequency="{TemplateBinding TickFrequency}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="TopRow" Property="Height" Value="4" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="BottomRow" Property="Height" Value="4" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopRow" Property="Height" Value="4" />
                            <Setter TargetName="BottomRow" Property="Height" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalRangeSlider}" />
            </Trigger>
        </Style.Triggers>


    </Style>

</ResourceDictionary>
