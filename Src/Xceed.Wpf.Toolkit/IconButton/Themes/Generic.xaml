<!--
    ***********************************************************************************
    
    Toolkit for WPF
    
    Copyright (C) 2007-2018 Xceed Software Inc.
    
    This program is provided to you under the terms of the Microsoft Public
    License (Ms-PL) as published at http://wpftoolkit.codeplex.com/license
    
    For more features, controls, and fast professional support,
    pick up the Plus Edition at https://xceed.com/xceed-toolkit-plus-for-wpf/
    
    Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids
    
    **********************************************************************************
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes">


    <!--  ===============================================================================  -->
    <!--  IconButton Style  -->
    <!--  ===============================================================================  -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:IconButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonNormalBackgroundKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonNormalOuterBorderKey}}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MouseOverForeground" Value="Black" />
        <Setter Property="MousePressedForeground" Value="Black" />
        <Setter Property="MouseOverBackground" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonMouseOverBackgroundKey}}" />
        <Setter Property="MousePressedBackground" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonPressedBackgroundKey}}" />
        <Setter Property="MouseOverBorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonMouseOverOuterBorderKey}}" />
        <Setter Property="MousePressedBorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonPressedOuterBorderKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconButton}">
                    <Border
                        x:Name="defaultBorder"
                        BorderBrush="Transparent"
                        BorderThickness="1">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <Grid
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="firstColumn" Width="Auto" />
                                    <ColumnDefinition x:Name="secondColumn" Width="*" />
                                </Grid.ColumnDefinitions>

                                <ContentControl
                                    x:Name="icon"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Icon}" />
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="defaultBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding MousePressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="border" Property="Background" Value="{Binding MousePressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding MousePressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonDisabledOuterBorderKey}}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlDisabledBackgroundKey}}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IconLocation" Value="Right">
                            <Setter TargetName="firstColumn" Property="Width" Value="*" />
                            <Setter TargetName="secondColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="icon" Property="Grid.Column" Value="1" />
                            <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
